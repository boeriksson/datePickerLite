{"version":3,"sources":["model.test.js"],"names":["describe","test","givenDay","parse","expect","dayOfWeek","toString","toBe","startDate","result","date","console","log","JSON","stringify"],"mappings":";;AAAA;;AAEA;;AAMAA,SAAS,eAAT,EAA0B,YAAM;AAC5BC,SAAK,yDAAL,EAAgE,YAAM;AAClE,YAAMC,WAAW,kBAAUC,KAAV,CAAgB,YAAhB,CAAjB;AACAC,eAAO,yBAAaF,QAAb,EAAuBG,SAAvB,GAAmCC,QAAnC,EAAP,EAAsDC,IAAtD,CAA2D,QAA3D;AACH,KAHD;AAIH,CALD;;AAOAP,SAAS,oBAAT,EAA+B,YAAM;AACjCC,SAAK,sDAAL,EAA6D,YAAM;AAC/D,YAAMO,YAAY,kBAAUL,KAAV,CAAgB,YAAhB,CAAlB;AACA,YAAMM,SAAS,8BAAkBD,SAAlB,EAA6B,UAACE,IAAD;AAAA,mBAAUA,KAAKL,SAAL,GAAiBC,QAAjB,EAAV;AAAA,SAA7B,CAAf;AACAK,gBAAQC,GAAR,CAAY,UAAZ,EAAwBC,KAAKC,SAAL,CAAeL,MAAf,CAAxB;AACH,KAJD;AAKH,CAND","file":"model.test.js","sourcesContent":["import { LocalDate } from 'js-joda'\r\n\r\nimport {\r\n    firstWeekDay,\r\n    parseWeekFromDay1\r\n} from './model'\r\n\r\n\r\ndescribe('#firstWeekDay', () => {\r\n    test('should return a monday in same week if given a thursday', () => {\r\n        const givenDay = LocalDate.parse('2018-05-11')\r\n        expect(firstWeekDay(givenDay).dayOfWeek().toString()).toBe('MONDAY')\r\n    })\r\n})\r\n\r\ndescribe('#parseWeekFromDay1', () => {\r\n    test('should return an array result of a supplied function', () => {\r\n        const startDate = LocalDate.parse('2018-05-07')\r\n        const result = parseWeekFromDay1(startDate)((date) => date.dayOfWeek().toString())\r\n        console.log('result: ', JSON.stringify(result));\r\n    })\r\n})\r\n"]}