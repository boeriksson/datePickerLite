{"version":3,"sources":["setup.js"],"names":["chai","dirtyChai","chaiEnzyme","context","translations","JSDOM","XMLHttpRequest","configure","Adapter","window","document","parent","self","adapter","use","originalNot","Object","getOwnPropertyDescriptor","Assertion","prototype","get","defineProperty","assign","assignedNot","apply","set","newNot","jestExpect","global","expect","actual","originalMatchers","chaiMatchers","config","module","archetype"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SAAQC,KAAR,QAAoB,OAApB;AACA,OAAOC,cAAP,MAA2B,MAA3B;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAO,cAAP;;AAEA,MAAM,EAACC,MAAD,KAAW,IAAIJ,KAAJ,CAAW,sDAAX,CAAjB;AACA,MAAMK,WAAWD,OAAOC,QAAxB;AACA,MAAMC,SAASF,MAAf;AACA,MAAMG,OAAOH,MAAb;;AAEAF,UAAU,EAAEM,SAAS,IAAIL,OAAJ,EAAX,EAAV;;AAEAR,KAAKc,GAAL,CAASb,SAAT;AACAD,KAAKc,GAAL,CAASZ,YAAT;;AAEA;AACA,MAAMa,cAAcC,OAAOC,wBAAP,CAAgCjB,KAAKkB,SAAL,CAAeC,SAA/C,EAA0D,KAA1D,EAAiEC,GAArF;AACAJ,OAAOK,cAAP,CAAsBrB,KAAKkB,SAAL,CAAeC,SAArC,EAAgD,KAAhD,EAAuD;AACnDC,UAAM;AACFJ,eAAOM,MAAP,CAAc,IAAd,EAAoB,KAAKC,WAAzB;AACA,eAAOR,YAAYS,KAAZ,CAAkB,IAAlB,CAAP;AACH,KAJkD;AAKnDC,QAAIC,MAAJ,EAAY;AACR,aAAKH,WAAL,GAAmBG,MAAnB;AACA,eAAOA,MAAP;AACH;AARkD,CAAvD;;AAWA;AACA,MAAMC,aAAaC,OAAOC,MAA1B;;AAEA,MAAMA,SAASC,UAAU;AACrB,UAAMC,mBAAmBJ,WAAWG,MAAX,CAAzB;AACA,UAAME,eAAehC,KAAK6B,MAAL,CAAYC,MAAZ,CAArB;AACA,WAAOd,OAAOM,MAAP,CAAcU,YAAd,EAA4BD,gBAA5B,CAAP;AACH,CAJD;;AAMA,MAAME,SAAS;AACXC,YAAQ,sBADG;AAEXC,eAAW;AAFA,CAAf;;AAKA;AACAnB,OAAOM,MAAP,CAAcM,MAAd,EAAsB;AAClBK,UADkB;AAElB9B,WAFkB;AAGlBC,gBAHkB;AAIlByB,UAJkB;AAKlBpB,UALkB;AAMlBE,UANkB;AAOlBC,QAPkB;AAQlBF,YARkB;AASlBJ;AATkB,CAAtB;;AAYA;;;;;;;AAOA;AACA;AACA;AACA;AACA","file":"setup.js","sourcesContent":["import chai from 'chai';\nimport dirtyChai from 'dirty-chai';\nimport chaiEnzyme from 'chai-enzyme';\nimport context from './_mocks/context';\nimport translations from './_mocks/translations';\nimport {JSDOM} from 'jsdom';\nimport XMLHttpRequest from 'xhr2';\nimport { configure } from 'enzyme';\nimport Adapter from 'enzyme-adapter-react-16';\nimport 'raf/polyfill';\n\nconst {window} = new JSDOM(`<!DOCTYPE html><html><body>Hello world</body></html>`);\nconst document = window.document;\nconst parent = window;\nconst self = window;\n\nconfigure({ adapter: new Adapter() });\n\nchai.use(dirtyChai);\nchai.use(chaiEnzyme());\n\n// Make sure chai and jasmine \".not\" play nice together\nconst originalNot = Object.getOwnPropertyDescriptor(chai.Assertion.prototype, 'not').get;\nObject.defineProperty(chai.Assertion.prototype, 'not', {\n    get() {\n        Object.assign(this, this.assignedNot);\n        return originalNot.apply(this);\n    },\n    set(newNot) {\n        this.assignedNot = newNot;\n        return newNot;\n    }\n});\n\n// Combine both jest and chai matchers on expect\nconst jestExpect = global.expect;\n\nconst expect = actual => {\n    const originalMatchers = jestExpect(actual);\n    const chaiMatchers = chai.expect(actual);\n    return Object.assign(chaiMatchers, originalMatchers);\n};\n\nconst config = {\n    module: \"entercash-withdrawal\",\n    archetype: \"withdrawal\"\n};\n\n// Setup mocked global objects.\nObject.assign(global, {\n    config,\n    context,\n    translations,\n    expect,\n    window,\n    parent,\n    self,\n    document,\n    XMLHttpRequest\n});\n\n/**\n * Now we should attach some properties\n * of [window] object to [global] in\n * order to use them as usual, without \"window.\" prefix.\n * Only now because we assign some of them in <setupPolyfills.js>\n */\n\n// Object.assign(\n//     global,\n//     ['navigator', 'location', 'CustomEvent', 'Event', 'fetch']\n//         .reduce((res, key) => Object.assign({}, res, {[key]: global.window[key]}), {})\n// );\n"]}